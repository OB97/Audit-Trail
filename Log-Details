'initiate global variables for storing values
Dim oldValue As String
Dim oldAddress As String

'sheet update function
Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
Dim sSheetName As String
Dim cel As Range
Dim emp As Boolean
'define active sheet
sSheetName = ActiveSheet.Name

'if editing multiple cells
If Target.Cells.Count > 1 Then

    'do not track changes to Log Details sheet
    If sSheetName <> "Log Details" Then
    
        'halt all external events during script
        Application.EnableEvents = False
    
        emp = True
    
        'check if any cells changed value, exit if none change
        For Each cel In Target.Cells
            If cel.Value <> "" Then
                emp = False
            End If
        Next cel
        
        If emp = True Then Exit Sub
        
        'set values into correct ranges, target.address takes the string range instead of string origin cell
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(1, 0).Value = sSheetName & " - " & Target.Address(False, False)
        
        'if a single column has mulitple cells edited, record column header, otherwise print string
        If Target.Columns.Count > 1 Then
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 1).Value = "Multiple Columns Edited"
        End If
        
        If Target.Columns.Count = 1 Then
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 1).Value = Target.EntireColumn.Cells(1, 1).Value
        End If
        
        'struggling to find a way to record multiple value changes at once, this is my solution
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 2).Value = "Multiple Cells Changed"
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 2).NumberFormat = "General"
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 3).Value = "Multiple Cells Changed"
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 3).NumberFormat = "General"
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 4).Value = Environ("username")
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 5).Value = Now
        
        'set up hyperlink
        Sheets("Log Details").Hyperlinks.Add Anchor:=Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 6), Address:="", SubAddress:="'" & sSheetName & "'!" & oldAddress, TextToDisplay:=oldAddress
        'format updated cells
        Sheets("Log Details").Columns("A:G").AutoFit
        
        'resume external events
        Application.EnableEvents = True
        
    End If
    
'if editing a single cell
Else

    'if filling in empty cell exit script
    If oldValue = "" Then Exit Sub
    'if the value doesn't change exit script
    If Target.Value = oldValue Then Exit Sub

    'do not track changes to Log Details sheet
    If sSheetName <> "Log Details" Then

        'halt all external events during script
        Application.EnableEvents = False

        'set up values into correct ranges
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(1, 0).Value = sSheetName & " - " & Target.Address(0, 0)
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 1).Value = Target.EntireColumn.Cells(1, 1).Value
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 4).Value = Environ("username")
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 5).Value = Now

        'format values to general unless they're in date format
        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 2).Value = oldValue
        If VarType(Target.Value) <> 7 Then
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 2).NumberFormat = "General"
        Else
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 2).NumberFormat = "dd/mm/yyyy;@"
        End If

        Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 3).Value = Target.Value
        If VarType(Target.Value) <> 7 Then
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 3).NumberFormat = "General"
        Else
            Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 3).NumberFormat = "dd/mm/yyyy;@"
        End If

        'set up hyperlink
        Sheets("Log Details").Hyperlinks.Add Anchor:=Sheets("Log Details").Range("A" & Rows.Count).End(xlUp).Offset(0, 6), Address:="", SubAddress:="'" & sSheetName & "'!" & oldAddress, TextToDisplay:=oldAddress
        'format updated cells
        Sheets("Log Details").Columns("A:G").AutoFit

        'resume external events
        Application.EnableEvents = True
        
    End If

End If

'format log details sheet
Sheets("Log Details").Columns("H").WrapText = True
Sheets("Log Details").Columns("H").Rows.AutoFit
Sheets("Log Details").Rows.VerticalAlignment = xlVAlignCenter

End Sub

'cell selection function, runs after update function (oldValue and oldAddress updated after cell values are changed)
Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
Dim valArray As Variant
On Error Resume Next

'if selecting more than 1 cell update value array to the target values and old address to target range
If Target.Cells.Count > 1 Then
    oldAddress = Target.Address
    
End If

'if selecting 1 cell update global variables
If Target.Cells.Count = 1 Then

    oldValue = Target.Value
    oldAddress = Target.Address
    
End If

End Sub
